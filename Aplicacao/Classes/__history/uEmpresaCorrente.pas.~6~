unit uEmpresaCorrente;

interface

uses
   SysUtils, SqlExpr, uDM_Conexao;

type
  TEmpresaCorrente = Class
  private
    FId             : Integer;
    FRSocial        : String;
    FFantasia       : String;
    FNomeFicticio   : String;
    FEndereco       : String;
    FComplemento    : String;
    FNumero         : String;
    FBairro         : String;
    FIdCidade       : Integer;
    FEstado         : String;
    FCEP            : String;
    FIdTelefone     : String;
    FEmail          : String;
    FPIS            : Currency;
    FCOFINS         : Currency;
    FVlrFrete       : Currency;
    FTelefone       : String;
    FMsg            : String;
    FVlrVendaEntrega: Currency;
    FVlrvendaLocal  : Currency;
  public
    procedure CarregarEmpresaCorrente;

    property Id             : Integer  read FId              write FId;
    property RSocial        : String   read FRSocial         write FRSocial;
    property Fantasia       : String   read FFantasia        write FFantasia;
    property NomeFicticio   : String   read FNomeFicticio    write FNomeFicticio;
    property Endereco       : String   read FEndereco        write FEndereco;
    property Complemento    : String   read FComplemento     write FComplemento;
    property Numero         : String   read FNumero          write FNumero;
    property Bairro         : String   read FBairro          write FBairro;
    property IdCidade       : Integer  read FIdCidade        write FIdCidade;
    property Estado         : String   read FEstado          write FEstado;
    property CEP            : String   read FCEP             write FCEP;
    property IdTelefone     : String   read FIdTelefone      write FIdTelefone;
    property Email          : String   read FEmail           write FEmail;
    property PIS            : Currency read FPIS             write FPIS;
    property COFINS         : Currency read FCOFINS          write FCOFINS;
    property VlrFrete       : Currency read FVlrFrete        write FVlrFrete;
    property Telefone       : String   read FTelefone        write FTelefone;
    property Msg            : String   read FMsg             write FMsg;
    property VlrVendaEntrega: Currency read FVlrVendaEntrega write FVlrVendaEntrega;
    property VlrVendaLocal  : Currency read FVlrvendaLocal   write FVlrvendaLocal;
  end;

var
  EmpresaCorrente: TEmpresaCorrente;

implementation

{ TEmpresaCorrente }

procedure TEmpresaCorrente.CarregarEmpresaCorrente;
var
  VQry: TSQLQuery;
  VSql: String;
begin
  VQry := TSQLQuery.Create(nil);
  try
    VQry.SQLConnection := dm_Conexao.Conn;

    VSql :=
      'select ' +
      '  id, ' +
      '  rsocial ' +
      'from empresa ' +
      'where ' +
      '  (emp_id_pk = %d)' ;

    VSql := Format(VSql, [Self.FId]);

    VQry.Close;
    VQry.CommandText := VSql;
    VQry.Open;
    try
      if VQry.RecordCount = 0 then
        raise Exception.Create('Empresa não encotrada.');

      Self.FId      := VQry.Fields[0].AsInteger;
      Self.FRSocial := VQry.Fields[1].AsString;
    finally
      VQry.Close;
    end;
  finally
    FreeAndNil(VQry);
  end;
end;

end.
