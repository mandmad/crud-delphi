unit uSistemaControl;

interface

uses
  uEmpresaCorrente, System.SysUtils, Data.SqlExpr;

type
  TSistema = class
  private
    FEmpresaCorrente: TEmpresaCorrente;

    class var FInstance: TSistema;
  public
    constructor Create;
    destructor Destroy; override;

    class function GetInstance: TSistemaControl;

    property EmpresaCorrente: TEmpresaCorrente read FEmpresaCorrente write FEmpresaCorrente;
  end;

implementation

{ TSistema }

constructor TSistemaControl.Create;
begin
  Self.FEmpresaCorrente := TEmpresaCorrente.Create;
end;

destructor TSistemaControl.Destroy;
begin
  FreeAndNil(Self.FEmpresaCorrente);

  inherited;
end;

class function TSistemaControl.GetInstance: TSistemaControl;
begin
  if not Assigned(Self.FInstance) then
  begin
    Self.FInstance := TSistemaControl.Create();
  end;

  Result := Self.FInstance;
end;

end.
